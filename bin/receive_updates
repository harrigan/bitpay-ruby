#!/usr/bin/env ruby

require File.dirname(__FILE__) + "/../lib/bitpay-ruby"

BitPayRuby::config = YAML.load_file(File.dirname(__FILE__) + "/../config/bitpay-ruby.yml")

require "optparse"

begin
  options = {}
  optparse = OptionParser.new do |opts|
    opts.banner = "Usage: #{$0} [options]"

    # specify an API key
    opts.on("-a", "--api-key API_KEY", "Specify an API key.") do |api_key|
      options["api_key"] = api_key
    end

    # receive status updates
    opts.on("-r", "--receive", "Receive invoice status updates.") do
    exit
    end

    # help
    opts.on("-h", "--help", "Show this help message.") do
      $stdout.puts opts
      exit
    end
  end

  optparse.parse!
  
  raise OptionParser::MissingArgument if options["api_key"].nil?

  require "sinatra"
  require "webrick/https"

  class App < Sinatra::Base
    post "/" do
      params.to_json
    end
  end

  webrick_options = {
    :server => "webrick",
    :Port => 8443,
    :SSLEnable => true,
    :SSLVerifyClient => OpenSSL::SSL::VERIFY_NONE,
    :SSLCertificate => OpenSSL::X509::Certificate.new(File.open("./config/ssl-cert.pem").read),
    :SSLPrivateKey => OpenSSL::PKey::RSA.new(File.open("./config/ssl-key.pem").read),
    :SSLCertName => [ [ "CN",WEBrick::Utils::getservername ] ],
    :app => App
  }

  Rack::Server.start webrick_options
  exit
rescue BitPayRuby::BitPayRubyError => e
  $stderr.puts e.message
  exit e.status_code
rescue Interrupt => e
  exit 1
end
